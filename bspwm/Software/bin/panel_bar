#! /bin/sh
#
# Example panel for dzen2

. panel_colors

NORMIFS=$IFS
FIELDIFS=':'
PADDING=' '

current_monitor="primary"

while getopts 'f:s:' opt ; do
	case "$opt" in
		f)
			font_family=$OPTARG
			;;
		s)
			font_size=$OPTARG
			;;
	esac
done

shift $((OPTIND - 1))

while read -r line ; do
	case $line in
		S*)
			# clock output
			sys_infos="${PADDING}${line#?}${PADDING}"
			;;
		T*)
			# xtitle output
			title="%{F$COLOU_HL_WHITE}${PADDING}${line#?}${PADDING}"
			;;
        C*)
            # Conky monitor
            sys_monitor="${line#?}"
            ;;
		W*)
			# bspwm internal state
			wm_infos="$PADDING"
            sec_wm_infos="$PADDING"
			IFS=$FIELDIFS
			set -- ${line#?}
			while [ $# -gt 0 ] ; do
				item=$1
				case $item in
                    [Mm]*)
                        # monitors
                        name=${item#?}
                        case $item in
                            [Mm]DVI-0)
                                current_monitor="primary"
                                ;;
                            [Mm]DVI-1)
                                current_monitor="secondary"
                                ;;
                        esac
                        ;;
					[OoFfUu]*)
						# desktops
						name=${item#?}
						case $item in
							O*)
								# focused occupied desktop
                                FORMAT="%{F$COLOUR_HL_WHITE U$COLOUR_HL_BLUE +u}"
								;;
							F*)
								# focused free desktop
                                FORMAT="%{F$COLOUR_FOREGROUND U$COLOUR_HL_BLUE +u}"
								;;
							U*)
								# focused urgent desktop
                                FORMAT="%{F$COLOUR_HL_ORANGE U$COLOUR_HL_BLUE +u}"
								;;
							o*)
								# occupied desktop
                                FORMAT="%{F$COLOUR_HL_WHITE -u}"
								;;
							f*)
								# free desktop
                                FORMAT="%{F$COLOUR_FOREGROUND -u}"
								;;
							u*)
								# urgent desktop
                                FORMAT="%{F$COLOUR_HL_WHITE U$COLOUR_HL_ORANGE +u}"
								;;
						esac
                        if [[ $current_monitor == "primary" ]] ; then
                            wm_infos="${wm_infos}${FORMAT}%{A:bspc desktop -f ${name}:}${PADDING}${name}${PADDING}%{A}"
                        else
                            sec_wm_infos="${sec_wm_infos}${FORMAT}%{A:bspc desktop -f ${name}:}${PADDING}${name}${PADDING}%{A}"
                        fi
						;;
					L*)
						# layout
						# layout=$(printf "%s" "${item#?}" | sed 's/^\(.\).*/\U\1/')
						# wm_infos="${wm_infos}^fg()^bg()${PADDING}${PADDING}^fg($COLOR_LAYOUT_FG)^bg($COLOR_LAYOUT_BG)^ca(1, bspc desktop -l next)${PADDING}$layout${PADDING}^ca()"
						;;
				esac
				shift
			done
			IFS=$NORMIFS
            wm_infos="${wm_infos}%{F$COLOUR_FOREGROUND -u}%{A:bspwm_new_desktop.sh:} + %{A}"
            sec_wm_infos="${sec_wm_infos}%{F$COLOUR_FOREGROUND -u}%{A:bspwm_new_desktop.sh:} + %{A}"
			;;
	esac
	printf "%s\n" "%{l}$wm_infos%{c}$title%{r}$sys_infos" > $PRIMARY_PANEL_FIFO &
    printf "%s\n" "%{l}$sec_wm_infos%{r}$sys_monitor" > $SECONDARY_PANEL_FIFO &

done
